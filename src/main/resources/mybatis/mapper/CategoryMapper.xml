<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.janhe.blog.mapper.CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.janhe.blog.pojo.Category" >
    <id column="oid" property="oid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="order_by" property="orderBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="enable_tag" property="enableTag" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="ca_info" property="caInfo" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="back_code1" property="backCode1" jdbcType="VARCHAR" />
    <result column="back_code2" property="backCode2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oid, name, level, parent_id, order_by, create_time, update_time, enable_tag, create_user, 
    ca_info, icon, back_code1, back_code2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.janhe.blog.pojo.CategoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from category
    where oid = #{oid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from category
    where oid = #{oid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.janhe.blog.pojo.CategoryExample" >
    delete from category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.janhe.blog.pojo.Category" >
    insert into category (oid, name, level, 
      parent_id, order_by, create_time, 
      update_time, enable_tag, create_user, 
      ca_info, icon, back_code1, 
      back_code2)
    values (#{oid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{parentId,jdbcType=VARCHAR}, #{orderBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{enableTag,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{caInfo,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{backCode1,jdbcType=VARCHAR}, 
      #{backCode2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.janhe.blog.pojo.Category" >
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        oid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="orderBy != null" >
        order_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="enableTag != null" >
        enable_tag,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="caInfo != null" >
        ca_info,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="backCode1 != null" >
        back_code1,
      </if>
      <if test="backCode2 != null" >
        back_code2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null" >
        #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enableTag != null" >
        #{enableTag,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="caInfo != null" >
        #{caInfo,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="backCode1 != null" >
        #{backCode1,jdbcType=VARCHAR},
      </if>
      <if test="backCode2 != null" >
        #{backCode2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.janhe.blog.pojo.CategoryExample" resultType="java.lang.Integer" >
    select count(*) from category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update category
    <set >
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderBy != null" >
        order_by = #{record.orderBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enableTag != null" >
        enable_tag = #{record.enableTag,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.caInfo != null" >
        ca_info = #{record.caInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.backCode1 != null" >
        back_code1 = #{record.backCode1,jdbcType=VARCHAR},
      </if>
      <if test="record.backCode2 != null" >
        back_code2 = #{record.backCode2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update category
    set oid = #{record.oid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      order_by = #{record.orderBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      enable_tag = #{record.enableTag,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      ca_info = #{record.caInfo,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      back_code1 = #{record.backCode1,jdbcType=VARCHAR},
      back_code2 = #{record.backCode2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.janhe.blog.pojo.Category" >
    update category
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null" >
        order_by = #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enableTag != null" >
        enable_tag = #{enableTag,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="caInfo != null" >
        ca_info = #{caInfo,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="backCode1 != null" >
        back_code1 = #{backCode1,jdbcType=VARCHAR},
      </if>
      <if test="backCode2 != null" >
        back_code2 = #{backCode2,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.janhe.blog.pojo.Category" >
    update category
    set name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=VARCHAR},
      order_by = #{orderBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      enable_tag = #{enableTag,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      ca_info = #{caInfo,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      back_code1 = #{backCode1,jdbcType=VARCHAR},
      back_code2 = #{backCode2,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
</mapper>